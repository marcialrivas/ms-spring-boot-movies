on:
  workflow_dispatch:
    inputs:
      version:
        description: The new version
        required: true
jobs:
  build:
    name: Build from development
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: develop
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build and unit testing
      env:
        MONGODB_ENDPOINT: ${{ secrets.MONGODB_ENDPOINT }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
      run: ./mvnw package
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: mrivas/ms-spring-boot-movies:staging-${{ github.event.inputs.version }}
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: More testing
      run: echo "More testing"
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ms-spring-boot-movies-task-definition.json
        container-name: ms-spring-boot-movies
        image: mrivas/ms-spring-boot-movies:staging-${{ github.event.inputs.version }}
        aws-region: us-east-1
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ms-spring-boot-movies
        cluster: microservices-cinepolisklic-io
        wait-for-service-stability: true
  draft-release:
    name: Draft Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: develop
    - name: create release branch
      run: git checkout -b release/${{ github.event.inputs.version }} develop
    - name: Update changelog
      uses: thomaseizinger/keep-a-changelog-new-release@1.1.0
      with:
        version: ${{ github.event.inputs.version }}
    - name: init git
      run: |
        git config user.name "GitHub actions"
        git config user.email noreply@github.com
    - name: update version
      run: echo "update version"
    - name: Commit changelog and manifest files
      id: make-commit
      run: |
        git add CHANGELOG.md
        git commit --message "Prepare release ${{ github.event.inputs.version }}"
        echo "::set-output name=commit::$(git rev-parse HEAD)"
    - name: Push new branch
      run: git push origin release/${{ github.event.inputs.version }}
    - name: Create pull request
      uses: thomaseizinger/create-pull-request@1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        head: release/${{ github.event.inputs.version }}
        base: master
        title: Release version ${{ github.event.inputs.version }}
        reviewers: ${{ github.actor }}
        body: |-
          Hi @${{ github.actor }}!
          This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
          I've updated the changelog and bumped the versions in the manifest files in this commit: ${{ steps.make-commit.outputs.commit }}.
          Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
